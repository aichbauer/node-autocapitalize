(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"./docz/1.index.mdx":function(e,t,a){"use strict";a.r(t);var n=a("./node_modules/react/index.js"),i=a.n(n),r=a("./node_modules/@mdx-js/tag/dist/index.js"),l=a("./node_modules/docz/dist/index.m.js"),o=a("./src/index.js");function c(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}t.default=function(e){var t=e.components,a=c(e,["components"]);return i.a.createElement(r.MDXTag,{name:"wrapper",components:t},i.a.createElement(r.MDXTag,{name:"h1",components:t,props:{id:"introduction"}},"Introduction"),i.a.createElement(r.MDXTag,{name:"p",components:t},i.a.createElement(r.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://www.npmjs.com/package/autocapitalize"}},i.a.createElement(r.MDXTag,{name:"img",components:t,parentName:"a",props:{src:"https://img.shields.io/npm/v/autocapitalize.svg?style=flat-square",alt:"npm"}})),i.a.createElement(r.MDXTag,{name:"img",components:t,parentName:"p",props:{src:"https://img.shields.io/bundlephobia/minzip/autocapitalize.svg?style=flat-square",alt:"npm bundle size (minified + gzip)"}}),i.a.createElement(r.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://travis-ci.org/aichbauer/node-autocapitalize"}},i.a.createElement(r.MDXTag,{name:"img",components:t,parentName:"a",props:{src:"https://img.shields.io/travis/com/aichbauer/autocapitalize/master.svg?style=flat-square",alt:"Travis branch"}})),i.a.createElement(r.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://codecov.io/gh/aichbauer/node-autocapitalize"}},i.a.createElement(r.MDXTag,{name:"img",components:t,parentName:"a",props:{src:"https://img.shields.io/codecov/c/github/aichbauer/node-autocapitalize/master.svg?style=flat-square",alt:"Codecov branch"}})),i.a.createElement(r.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://aichbauer.github.io/node-autocapitalize"}},i.a.createElement(r.MDXTag,{name:"img",components:t,parentName:"a",props:{src:"https://img.shields.io/badge/docs%20with-docz-1F2D3D.svg?style=flat-square",alt:"storybook"}}))),i.a.createElement(r.MDXTag,{name:"blockquote",components:t},i.a.createElement(r.MDXTag,{name:"p",components:t,parentName:"blockquote"},"A small string manipulation library to capitalize letters based on rules")),i.a.createElement(r.MDXTag,{name:"p",components:t},"Install"),i.a.createElement(r.MDXTag,{name:"pre",components:t},i.a.createElement(r.MDXTag,{name:"code",components:t,parentName:"pre",props:{className:"language-sh",metaString:""}},"$ npm i autocapitalize -S\n")),i.a.createElement(r.MDXTag,{name:"p",components:t},"and import the cuntion from ",i.a.createElement(r.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"autocapitalize")," and you are ready to go."),i.a.createElement(r.MDXTag,{name:"pre",components:t},i.a.createElement(r.MDXTag,{name:"code",components:t,parentName:"pre",props:{className:"language-js",metaString:""}},"const { autocapitalize } = require('autocapitalize');\n")),i.a.createElement(r.MDXTag,{name:"p",components:t},"Now you can manipulate any input string based on rules. Capitalize every first letter of a sentence, capitalize every word, or even capitalizing every character."),i.a.createElement(r.MDXTag,{name:"p",components:t},"But see your self:"),i.a.createElement(l.Playground,{__position:0,__code:"<div>\n  <div>Input:</div>\n  <div>\n    capitalize every first letter of a sentence. need that every day, right?\n  </div>\n  <div>Output:</div>\n  <div>\n    {autocapitalize(\n      'capitalize every first letter of a sentence. need that every day, right?',\n      'sentences',\n    )}\n  </div>\n</div>\n<br />\n<br />\n<div>\n  <div>Input:</div>\n  <div>\n    capitalize every first letter of every word, this is what i need every day\n    twice!!!\n  </div>\n  <div>Output:</div>\n  <div>\n    {autocapitalize(\n      'capitalize every first letter of every word, this is what i need every day twice!!!',\n      'words',\n    )}\n  </div>\n</div>\n<br />\n<br />\n<div>\n  <div>Input:</div>\n  <div>\n    capitalize every letter, this is what i need most!!!1!1!11! *iamcalm*\n  </div>\n  <div>Output:</div>\n  <div>\n    {autocapitalize(\n      'capitalize every letter, this is what i need most!!!1!1!11! *iamcalm*',\n      'characters',\n    )}\n  </div>\n</div>",__scope:{props:a,autocapitalize:o.a}},i.a.createElement("div",null,i.a.createElement("div",null,"Input:"),i.a.createElement("div",null,"capitalize every first letter of a sentence. need that every day, right?"),i.a.createElement("div",null,"Output:"),i.a.createElement("div",null,Object(o.a)("capitalize every first letter of a sentence. need that every day, right?","sentences"))),i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("div",null,i.a.createElement("div",null,"Input:"),i.a.createElement("div",null,"capitalize every first letter of every word, this is what i need every day twice!!!"),i.a.createElement("div",null,"Output:"),i.a.createElement("div",null,Object(o.a)("capitalize every first letter of every word, this is what i need every day twice!!!","words"))),i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("div",null,i.a.createElement("div",null,"Input:"),i.a.createElement("div",null,"capitalize every letter, this is what i need most!!!1!1!11! *iamcalm*"),i.a.createElement("div",null,"Output:"),i.a.createElement("div",null,Object(o.a)("capitalize every letter, this is what i need most!!!1!1!11! *iamcalm*","characters")))))}}}]);